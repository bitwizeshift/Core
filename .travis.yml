##############################################################################
# project configuration
##############################################################################

# Enable C++
language: cpp

dist: trusty
sudo: required
group: edge

##############################################################################
# branch settings
##############################################################################
branches:
  except:
    - prototype/.*
    - gh-pages

##############################################################################
# build matrix
##############################################################################

matrix:
  include:

    #################
    # macOS : clang #
    #################

    - name: "macOS xcode6.4 unit tests"
      os: osx
      osx_image: xcode6.4

    - name: "macOS xcode7.3 unit tests"
      os: osx
      osx_image: xcode7.3

    - name: "macOS xcode8 unit tests"
      os: osx
      osx_image: xcode8

    - name: "macOS xcode8.1 unit tests"
      os: osx
      osx_image: xcode8.1

    - name: "macOS xcode8.2 unit tests"
      os: osx
      osx_image: xcode8.2

    - name: "macOS xcode8.3 unit tests"
      os: osx
      osx_image: xcode8.3

    - name: "macOS xcode9 unit tests"
      os: osx
      osx_image: xcode9

    - name: "macOS xcode9.1 unit tests"
      os: osx
      osx_image: xcode9.1

    - name: "macOS xcode9.2 unit tests"
      os: osx
      osx_image: xcode9.2

    - name: "macOS xcode9.3 unit tests"
      os: osx
      osx_image: xcode9.3

    - name: "macOS xcode9.4 unit tests"
      os: osx
      osx_image: xcode9.4

    - name: "macOS xcode10 unit tests"
      os: osx
      osx_image: xcode10

    ###############
    # Linux : GCC #
    ###############

    - name: "Linux g++-4.8 unit tests"
      os: linux
      compiler: gcc
      env: compiler=g++-4.8
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-4.8', 'ninja-build']

    - name: "Linux g++-4.9 unit tests"
      os: linux
      compiler: gcc
      env: compiler=g++-4.9
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-4.9', 'ninja-build']

    - name: "Linux g++-5 unit tests"
      os: linux
      compiler: gcc
      env: COMPILER=g++-5
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-5', 'ninja-build']

    - name: "Linux g++-6 unit tests"
      os: linux
      compiler: gcc
      env: COMPILER=g++-6
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-6', 'ninja-build']

    - name: "Linux g++-7 unit tests"
      os: linux
      compiler: gcc
      env: COMPILER=g++-7
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-7', 'ninja-build']

    - name: "Linux g++-8 unit tests"
      os: linux
      compiler: gcc
      env: COMPILER=g++-8
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-8', 'ninja-build']

    #################
    # Linux : clang #
    #################

    - name: "Linux clang++-3.5 unit tests"
      os: linux
      compiler: clang
      env: COMPILER=clang++-3.5
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.5']
          packages: ['g++-6', 'clang-3.5', 'ninja-build']

    - name: "Linux clang++-3.6 unit tests"
      os: linux
      compiler: clang
      env: COMPILER=clang++-3.6
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.6']
          packages: ['g++-6', 'clang-3.6', 'ninja-build']

    - name: "Linux clang++-3.7 unit tests"
      os: linux
      compiler: clang
      env: COMPILER=clang++-3.7
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.7']
          packages: ['g++-6', 'clang-3.7', 'ninja-build']

    - name: "Linux clang++-3.8 unit tests"
      os: linux
      compiler: clang
      env: COMPILER=clang++-3.8
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-6', 'clang-3.8', 'ninja-build']

    - name: "Linux clang++-3.9 unit tests"
      os: linux
      compiler: clang
      env: COMPILER=clang++-3.9
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-6', 'clang-3.9', 'ninja-build']

    - name: "Linux clang++-4.0 unit tests"
      os: linux
      compiler: clang
      env: COMPILER=clang++-4.0
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-4.0']
          packages: ['g++-6', 'clang-4.0', 'ninja-build']

    - name: "Linux clang++-5.0 unit tests"
      os: linux
      compiler: clang
      env: COMPILER=clang++-5.0
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-5.0']
          packages: ['g++-6', 'clang-5.0', 'ninja-build']

    - name: "Linux clang++-6.0 unit tests"
      os: linux
      compiler: clang
      env: COMPILER=clang++-6.0
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-6.0']
          packages: ['g++-6', 'clang-6.0', 'ninja-build']

    ###########################
    # Linux : clang sanitizer #
    ###########################

    - name: "Linux clang++-6.0 UB sanitizer"
      os: linux
      compiler: clang
      env:
        - COMPILER=clang++-6.0
        - CMAKE_OPTIONS=-DBIT_CORE_ENABLE_UBSAN=On
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-6.0']
          packages: ['g++-6', 'clang-6.0', 'ninja-build']

    - name: "Linux clang++-6.0 address sanitizer"
      os: linux
      compiler: clang
      env:
        - COMPILER=clang++-6.0
        - CMAKE_OPTIONS=-DBIT_CORE_ENABLE_ASAN=On
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-6.0']
          packages: ['g++-6', 'clang-6.0', 'ninja-build']

    - name: "Linux clang++-6.0 memory sanitizer"
      os: linux
      compiler: clang
      env:
        - COMPILER=clang++-6.0
        - CMAKE_OPTIONS=-DBIT_CORE_ENABLE_MSAN=On
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-6.0']
          packages: ['g++-6', 'clang-6.0', 'ninja-build']

    - stage: deploy

    - script: skip
      deploy:


##############################################################################
# 1. Install Step
##############################################################################

install:
  # Get CMake (on MacOS)
  - |
    if [[ (-x $(which brew)) ]]; then
      brew update
      brew install cmake ninja
      brew upgrade cmake
    fi

  # Install conan
  - pip install conan

##############################################################################
# 2. Build Step
##############################################################################

script:

  # Export the compiler
  - |
    if [[ "${COMPILER}" != "" ]]; then
      export CXX=${COMPILER}
    fi

  # Display information
  - uname -a
  - $CXX --version
  - cmake --version
  - ninja --version
  - conan --version

  # Compile and execute unit tests
  - mkdir -p build && cd build
  - conan install .. -odev_setup=True
  - cmake .. -G"Ninja" -DBIT_CORE_COMPILE_UNIT_TESTS=On -DBIT_CORE_COMPILE_SELF_CONTAINMENT_TESTS=On ${CMAKE_OPTIONS}
  - cmake --build . --config Release
  - ctest -C Release -V -j --output-on-failure
  - cd ..

##############################################################################
# 3. Deploy Step
##############################################################################

deploy:
  # Deploy testing conan packages on develop
  - provider: script
    script: bash .ci/deploy_conan.sh "testing" "-${TRAVIS_BUILD_NUMBER}"
    on:
      branch: develop

  # Deploy stable conan packages on master
  - provider: script
    script: bash .ci/deploy_conan.sh "stable"
    on:
      branch: master

  # Deploy doxygen documentation on master
  - provider: script
    script: bash .ci/deploy_doxygen.sh
    on:
      branch: master
